{"version":3,"sources":["LinkButton.js","CheckBox.js","EngineSelector.js","KeywordSelector.js","SearchBar.js","App.js","serviceWorker.js","index.js"],"names":["LinkButton","props","react_default","a","createElement","href","link","icon","CheckBox","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleChecked","setState","state","checked","callback","callbackArg","bind","assertThisInitialized","classes","cssClass","className","labelText","type","onChange","React","Component","EngineSelector","handleCheckboxes","engines","name","md_index_esm","prefix","index_esm","id","src","alt","currentEngines","Set","eng","i","length","push","src_CheckBox","key","engine","KeywordSelector","terms","keywords","j","keyword","SearchBar","handleKeyPress","event","searchterm","encodeURIComponent","keywordExtract","selectedKeywords","document","getElementById","value","size","window","open","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","orderSet","Symbol","iterator","next","done","item","location","err","return","handleKeywordCheckboxes","handleEngineCheckboxes","has","delete","add","set","newset","tempStack","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","pop","keywordString","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","src_EngineSelector","onKeyPress","autoFocus","src_KeywordSelector","App","mainDiv","createRef","current","addEventListener","handleKeyPressed","removeEventListener","e","focus","tabIndex","ref","onKeyDown","src_LinkButton","src_SearchBar","Boolean","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.926d7387.chunk.js","sourcesContent":["import React from 'react';\n\nfunction LinkButton(props) {\n  return (\n    <a href={props.link}>\n      {props.icon}\n    </a>\n  );\n}\n\nexport default LinkButton;","import React from 'react';\n\nclass CheckBox extends React.Component \n{\n  constructor(props)\n  {\n    super(props);\n    this.state = \n    {\n      checked: this.props.checked,\n    }\n    this.toggleChecked = this.toggleChecked.bind(this);\n  }\n\n  toggleChecked = () => {\n    this.setState(state => ({ checked: !state.checked }));\n    this.props.callback(this.props.callbackArg);\n  };\n  \n  render() \n  {\n    const classes = this.props.cssClass;\n    return <div className=\"checkdiv\">\n      <label className={this.state.checked ?  classes + \" checked\" : classes}>\n      {this.props.labelText}\n      <input type=\"checkbox\" checked={this.state.checked} onChange={this.toggleChecked}></input>\n      </label>\n    </div>\n  }\n}\n\nexport default CheckBox;","import React from 'react';\nimport {FaGoogle, FaImages, FaStackOverflow, FaCalculator, FaYoutube, FaAmazon, FaReddit, FaMapMarkedAlt, FaSearch, FaGithub } from 'react-icons/fa';\nimport {MdHttp, MdHttps} from 'react-icons/md';\nimport CheckBox from './CheckBox';\n\n\nclass EngineSelector extends React.Component \n{\n  constructor(props)\n  {\n    super(props);\n    this.handleCheckboxes = this.handleCheckboxes.bind(this);\n    \n    this.engines= [\n      {name:<MdHttp/>, prefix:\"http://\"},\n      {name:<MdHttps/>, prefix:\"https://\"},\n      {name:<FaSearch/>, prefix:\"\"},\n      {name:<FaGoogle/>, prefix:\"!g\"},\n      {name:<FaImages/>, prefix:\"!gi\"},\n      {name:<FaYoutube/>, prefix:\"!yt\"},\n      {name:<img id=\"mdn-logo\" src=\"mdnlogo.svg\" alt=\"\"/>, prefix:\"!mdn\"},\n      {name:<FaStackOverflow/>, prefix:\"!so\"},\n      {name:<FaGithub/>, prefix:\"!gh\"},\n      {name:<FaCalculator/>, prefix:\"!wa\"},\n      {name:<FaAmazon/>, prefix:\"!smileuk\"},\n      {name:<FaReddit/>, prefix:\"!reddit\"},\n      {name:<FaMapMarkedAlt/>, prefix:\"!mapsuk\"},\n      {name:<img id=\"cpp-logo\" src=\"cpplogo.svg\" alt=\"\"/>, prefix:\"!cppr\"},\n    ];\n    this.currentEngines = new Set();\n\n    this.eng = [];\n    for (var i = 0; i < this.engines.length; i++) \n    {\n        this.eng.push(<CheckBox key={i} \n                                callback={this.handleCheckboxes} \n                                callbackArg={this.engines[i]} \n                                labelText={this.engines[i].name}\n                                cssClass=\"engineSelector checklabel noselect\"\n                                />);\n    }\n  }\n\n  handleCheckboxes(engine)\n  {\n    this.props.callback(engine);\n  }\n\n  render() \n  {\n    return  <div className=\"carousel\">\n              {this.eng}\n            </div>\n  }\n}\n\nexport default EngineSelector;","import React from 'react';\nimport CheckBox from './CheckBox';\nclass KeywordSelector extends React.Component \n{\n  constructor(props)\n  {\n    super(props);\n    this.handleCheckboxes = this.handleCheckboxes.bind(this);\n\n    this.terms = [\n      \"react\",\n      \"git\",\n      \"python\",\n      \"c++\",\n      \"r programming language\",\n      \"javascript\",\n      \"c#\",\n      \"embedded c\",\n      \"latex\",\n      \".net core\",\n      \"how to\",\n      \"programming\",\n      \"tutorial\",\n      \"standard library\",\n      \"vscode\",\n      \"cli\",\n      \"command line\",\n      \"gui\",\n      \"linux\",\n      \"windows\",\n      \"android\",\n    ];\n\n    this.keywords = [];\n    for (var j = 0; j < this.terms.length; j++) \n    {\n        this.keywords.push(<CheckBox  key={j} \n                                      callback={this.handleCheckboxes} \n                                      callbackArg={this.terms[j]}\n                                      labelText={this.terms[j]}\n                                      cssClass=\"keywordSelector checklabel noselect\"\n                                      />);\n    }\n  }\n\n  handleCheckboxes(keyword)\n  {\n    this.props.callback(keyword);\n  }\n\n  render() \n  {\n    return  <div className=\"carousel topmargin\">\n              {this.keywords}\n            </div>\n  }\n}\n\nexport default KeywordSelector;","import React from 'react';\nimport EngineSelector from './EngineSelector';\nimport KeywordSelector from './KeywordSelector';\n\nclass SearchBar extends React.Component \n{\n  constructor()\n  {\n    super();\n    this.currentEngines = new Set();\n    this.selectedKeywords = new Set();\n\n    this.handleKeywordCheckboxes = this.handleKeywordCheckboxes.bind(this);\n    this.handleEngineCheckboxes = this.handleEngineCheckboxes.bind(this);\n\n  }\n\n  handleEngineCheckboxes(engine)\n  {\n    if(this.currentEngines.has(engine))\n    {\n      this.currentEngines.delete(engine);\n    }\n    else\n    {\n      this.currentEngines.add(engine);\n    }\n  }\n\n\n  handleKeywordCheckboxes(engine)\n  {\n    if(this.selectedKeywords.has(engine))\n    {\n      this.selectedKeywords.delete(engine);\n    }\n    else\n    {\n      this.selectedKeywords.add(engine);\n    }\n  }\n\n  handleKeyPress = (event) => \n  {\n    if(event.key === 'Enter')\n    {\n      const searchterm = encodeURIComponent(this.keywordExtract(this.selectedKeywords)+document.getElementById(\"searchbar\").value)\n      if(this.currentEngines.size === 0)\n      {\n        window.open(\"https://duckduckgo.com/?q=\"+searchterm, \"_self\");\n      }\n      else\n      {\n        for (let item of this.orderSet(this.currentEngines))\n        {\n          if(item.prefix === \"http://\" || item.prefix === \"https://\")\n          {\n            window.location.href = item.prefix + document.getElementById(\"searchbar\").value;\n          }\n          else\n          {\n            window.open(\"https://duckduckgo.com/?q=\"+item.prefix+\" \"+searchterm, (this.currentEngines.size === 1) ? \"_self\": \"_blank\");\n          }\n        }\n      }\n    }\n  }\n\n  orderSet(set)\n  {\n    var newset = new Set();\n    var tempStack = [];\n    for (let item of set)\n    { \n      tempStack.push(item);\n    }\n    for (var i = 0; i < set.size; i++)\n    {\n      newset.add(tempStack.pop());\n    }\n    return newset;\n  }\n\n  keywordExtract(set)\n  {\n    var keywordString = \"\";\n    for (let item of set)\n    { \n      keywordString = keywordString + item + \" \";\n    }\n    return keywordString;\n  }\n\n  render() \n  {\n    return <div className=\"searchbox\">\n      <EngineSelector callback={this.handleEngineCheckboxes} />\n      <div className=\"inputcontainer\">\n        <input id=\"searchbar\" type=\"search\" onKeyPress={this.handleKeyPress} autoFocus/>\n      </div>\n      <KeywordSelector callback={this.handleKeywordCheckboxes} />\n    </div>\n  }\n}\n\nexport default SearchBar;","import React from 'react';\nimport LinkButton from './LinkButton';\nimport './App.css';\nimport { FaGithub, FaYoutube, FaTwitch, FaReddit, FaDropbox, FaPlay, FaShoppingBag, FaTv, FaFacebook, FaMailBulk, FaLinkedin, FaBitbucket, FaGoogleDrive, FaFacebookMessenger, FaSpotify, FaAmazon } from 'react-icons/fa';\nimport SearchBar from './SearchBar';\n\nclass App extends React.Component  \n{\n  constructor()\n  {\n    super();\n    this.mainDiv = React.createRef();\n  }\n\n  componentDidMount() \n  {\n    this.mainDiv.current.addEventListener(\"keydown\", this.handleKeyPressed);\n  }\n\n  componentWillUnmount() \n  {\n    this.mainDiv.current.removeEventListener(\"keydown\", this.handleKeyPressed);\n  }\n\n  handleKeyPressed(e) \n  {\n    document.getElementById(\"searchbar\").focus();\n  }\n\n  render()\n  {\n    return <div className=\"App\" tabIndex=\"0\" ref={this.mainDiv} onKeyDown={this.handleKeyPressed}>\n      <div className=\"App-header\">\n        <LinkButton link=\"https://github.com/\" icon={<FaGithub/>}/>\n        <LinkButton link=\"https://facebook.com/\" icon={<FaFacebook/>}/>\n        <LinkButton link=\"https://messenger.com/\" icon={<FaFacebookMessenger/>}/>\n        <LinkButton link=\"https://linkedin.com/\" icon={<FaLinkedin/>}/>\n        <LinkButton link=\"https://outlook.live.com/owa/?path=/mail/inbox\" icon={<FaMailBulk/>}/>\n        <LinkButton link=\"https://youtube.com/\" icon={<FaYoutube/>}/>\n        <LinkButton link=\"https://twitch.tv/directory\" icon={<FaTwitch/>}/>\n        <LinkButton link=\"https://smile.amazon.co.uk/\" icon={<FaAmazon/>}/>\n        <LinkButton link=\"https://reddit.com/\" icon={<FaReddit/>}/>\n        <LinkButton link=\"https://dropbox.com/\" icon={<FaDropbox/>}/>\n        <LinkButton link=\"https://drive.google.com/drive/my-drive\" icon={<FaGoogleDrive/>}/>\n        <LinkButton link=\"https://bitbucket.org/\" icon={<FaBitbucket/>}/>\n        <LinkButton link=\"https://netflix.com/\" icon={<FaPlay/>}/>\n        <LinkButton link=\"https://humblebundle.com/\" icon={<FaShoppingBag/>}/>\n        <LinkButton link=\"https://app.plex.tv/desktop\" icon={<FaTv/>}/>\n        <LinkButton link=\"https://spotify.com/\" icon={<FaSpotify/>}/>\n      </div>\n      <div className=\"App-bottom\">\n        <SearchBar/>\n      </div>\n    </div>\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}